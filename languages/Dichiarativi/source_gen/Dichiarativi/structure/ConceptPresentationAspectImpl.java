package Dichiarativi.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private ConceptPresentation props_Campo;
  private ConceptPresentation props_Dichiarazione;
  private ConceptPresentation props_Quadro;

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.Campo:
        if (props_Campo == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("campo");
          cpb.rawPresentation("campo");
          props_Campo = cpb.create();
        }
        return props_Campo;
      case LanguageConceptSwitch.Dichiarazione:
        if (props_Dichiarazione == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Dichiarazione");
          cpb.rawPresentation("Dichiarazione");
          props_Dichiarazione = cpb.create();
        }
        return props_Dichiarazione;
      case LanguageConceptSwitch.Quadro:
        if (props_Quadro == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Quadro");
          cpb.rawPresentation("Quadro");
          props_Quadro = cpb.create();
        }
        return props_Quadro;
    }
    return null;
  }
}
